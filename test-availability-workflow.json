{
  "version": "0.2.0",
  "type": "workflow",
  "nodes": [
    {
      "id": "entry",
      "type": "entry",
      "position": { "x": 100, "y": 100 },
      "next": [{ "condition": "true", "node": "extract_dates" }]
    },
    {
      "id": "extract_dates",
      "type": "execute-code",
      "position": { "x": 300, "y": 100 },
      "name": "Extract Check-in/Check-out Dates",
      "code": "// Extract dates from user message using NLP\nconst userMessage = event.payload.text.toLowerCase();\nconst dateRegex = /\\b(\\d{1,2}[\\/-]\\d{1,2}[\\/-]\\d{2,4}|\\d{4}-\\d{2}-\\d{2})\\b/g;\nconst dates = userMessage.match(dateRegex) || [];\n\n// Extract number of guests\nconst guestRegex = /\\b(\\d+)\\s*(guest|person|people|adult)s?\\b/i;\nconst guestMatch = userMessage.match(guestRegex);\nconst guests = guestMatch ? parseInt(guestMatch[1]) : 1;\n\n// Set workflow variables\nworkflow.check_in_date = dates[0] || '';\nworkflow.check_out_date = dates[1] || '';\nworkflow.guests = guests;\n\n// If dates are missing, ask user\nif (!workflow.check_in_date || !workflow.check_out_date) {\n  workflow.missing_info = true;\n} else {\n  workflow.missing_info = false;\n}",
      "next": [
        { "condition": "workflow.missing_info === true", "node": "ask_dates" },
        { "condition": "workflow.missing_info === false", "node": "mock_availability" }
      ]
    },
    {
      "id": "ask_dates",
      "type": "say",
      "position": { "x": 300, "y": 300 },
      "text": "I'd be happy to check room availability for you! Please provide:\n\n📅 Check-in date (YYYY-MM-DD)\n📅 Check-out date (YYYY-MM-DD)\n👥 Number of guests\n\nExample: \"Check availability from 2024-03-15 to 2024-03-18 for 2 guests\"",
      "next": [{ "condition": "true", "node": "wait_for_dates" }]
    },
    {
      "id": "wait_for_dates",
      "type": "listen",
      "position": { "x": 300, "y": 450 },
      "next": [{ "condition": "true", "node": "extract_dates" }]
    },
    {
      "id": "mock_availability",
      "type": "execute-code",
      "position": { "x": 600, "y": 100 },
      "name": "Mock Availability Data",
      "code": "// Mock availability data for testing\nconst mockRooms = [\n  {\n    roomTypeName: 'Ocean View Suite',\n    averagePrice: 450,\n    available: 2,\n    maxOccupancy: 4\n  },\n  {\n    roomTypeName: 'Garden Villa',\n    averagePrice: 350,\n    available: 1,\n    maxOccupancy: 2\n  },\n  {\n    roomTypeName: 'Master Pool Suite',\n    averagePrice: 650,\n    available: 1,\n    maxOccupancy: 6\n  }\n];\n\n// Filter rooms based on guest count\nconst availableRooms = mockRooms.filter(room => room.maxOccupancy >= workflow.guests);\n\nworkflow.availability_data = {\n  data: {\n    roomTypes: availableRooms\n  }\n};\nworkflow.api_success = true;",
      "next": [{ "condition": "true", "node": "format_availability" }]
    },
    {
      "id": "format_availability",
      "type": "execute-code",
      "position": { "x": 900, "y": 100 },
      "name": "Format Availability Response",
      "code": "const data = workflow.availability_data;\n\nif (!data || !data.data || !data.data.roomTypes) {\n  workflow.formatted_response = '❌ No availability data received.';\n  return;\n}\n\nconst roomTypes = data.data.roomTypes;\nconst availableRooms = roomTypes.filter(room => room.available > 0);\n\nif (availableRooms.length === 0) {\n  workflow.formatted_response = `😔 Sorry, no rooms are available from ${workflow.check_in_date} to ${workflow.check_out_date} for ${workflow.guests} guest(s).\\n\\nWould you like to try different dates?`;\n  return;\n}\n\n// Format available rooms\nlet response = `🏨 **Available Rooms** (${workflow.check_in_date} to ${workflow.check_out_date})\\n\\n`;\nresponse += `*This is a test version with mock data*\\n\\n`;\n\navailableRooms.forEach(room => {\n  response += `🛏️ **${room.roomTypeName}**\\n`;\n  response += `   💰 Price: $${room.averagePrice}/night\\n`;\n  response += `   🏠 Available: ${room.available} room(s)\\n`;\n  response += `   👥 Max occupancy: ${room.maxOccupancy} guests\\n\\n`;\n});\n\nresponse += '💬 This is a test version. Would you like to check different dates or need more information?';\n\nworkflow.formatted_response = response;",
      "next": [{ "condition": "true", "node": "show_availability" }]
    },
    {
      "id": "show_availability",
      "type": "say",
      "position": { "x": 900, "y": 300 },
      "text": "{{workflow.formatted_response}}",
      "next": [{ "condition": "true", "node": "end_conversation" }]
    },
    {
      "id": "end_conversation",
      "type": "say",
      "position": { "x": 900, "y": 600 },
      "text": "Thank you for testing our availability checker! Is there anything else I can help you with?",
      "next": []
    }
  ]
}
